{"version": "1.6","name": "Flag Master 1.0","subline": "ExpressionEngine Entry / Comment Flagging System","username": "Mithra62","created": "07/21/2012","website": "http://mithra62.com","update": "07/22/2012","update_today": true,"email": "eric@mithra62.com","intro": "","sections": [{"title": "About Flag Master","id": "about_flag_master","content": "<p>\tFlag Master makes it easy to hand content moderation of an ExpressionEngine site off to the users. With Flag Master you can create unlimited Profiles with custom options to allow site users the ability to mark, or &quot;Flag&quot;, certain content based on your specific needs and custom criteria.</p>\n<p>\tFlag Master works with both Channel Entries and Comments and can be set to auto close items based on flag count.</p>\n"},{"title": "Installation","id": "installation","content": "<p>\tTo install Flag Master you follow the same steps as any other <a href=\"http://expressionengine.com/user_guide/cp/add-ons/index.html\">ExpressionEngine add-on</a>:</p>\n<ol>\n\t<li>\t\tUnzip the download</li>\n\t<li>\t\tUpload the extracted folder to your ExpressionEngine third party folder usually located at:<br>\n\t\t<span style=\"color: rgb(204, 51, 51);\">/system/expressionengine/third_party/</span></li>\n\t<li>\t\tNavigate to your Add-Ons management page and choose Modules</li>\n\t<li>\t\tSelect Flag Master from the list and click install. Choose to install all items.</li>\n</ol>\n<p>\tOnce the module package is installed you have to create your first Profile and create/assign Options to it.</p>\n<p>\tOptionally, you can create a custom field within your channels using the Flag Master custom FieldType. This FieldType will display details about an entries current Flags and allow quick access to the module.</p>\n"},{"title": "FieldType","id": "fieldtype","content": "<p>\tFlag Master comes with a FieldType you can attach to your channel entries to view the Flags against your content. The FieldType lists the Flag Options selected and links to display details on those flags. It&#39;s recommended that the field is placed in it&#39;s own tab from the Publish Layout customization.</p>\n"},{"title": "Profiles","id": "profiles","content": "<p>\tFlag Master allows you to setup multiple, different, flag options for your content. You do this through Profiles. For example, you can setup a Profile for your Blog Comments and another for Blog Articles, each having it&#39;s own custom options to flag an item.</p>\n<h4>\n\tAdd Profile</h4>\n<p>\tSimply click Add Profile and fill out the form. Note that the Type option is <em>very</em> important for Flag Master to relate data properly so check your work.</p>\n<h4>\n\tFlag Options</h4>\n<p>\tOnce a Profile has been created you can add Flag Options. Here is where you setup the various options selectable for flagging content. You can setup options to be user defined (textarea option) as well as if a user has to be logged in to choose an option.</p>\n<p>\tYou can sort the Flag Options by drag and dropping the rows on the Profile View page.</p>\n"},{"title": "Dashboard","id": "dashboard","content": "<p>\tThe Dashboard is where you can view all the stats for your Flagged items. The Dashboard is broken up by either Entry or Comments.</p>\n<h4>\n\tView Flags</h4>\n<p>\tClicking on a either a comment or entry from the Dashboard will take you to an overview of the flags for that item. This page displays the quick access to the item, dates for first and last flag, and a grouping of all flag options.</p>\n<h4>\n\tView Flag Option</h4>\n<p>\tTo allow for detailed analysis of an individual comment or entrie&#39;s flags Flag Master stores a lot of details about each flag event.</p>\n"},{"title": "Developers","id": "developers","content": "<p>\tFlag Master uses a prefix mechanism for all template tags. By default, the prefix is &quot;fm&quot; but you can change it by adding the variable &quot;prefix=&quot; to all tag pairs.</p>\n<h4>\n\tflag_master:simple_form</h4>\n<p>\t<code>{exp:flag_master:simple_form}</code></p>\n<p>\tThis is the main template tag pair to use. It creates a form to create the Flag interface. It accepts the below parameters:</p>\n<p>\t<strong>Parameters</strong></p>\n<p>\t<strong>profile_id</strong> (required)<br>\n\tThe ID number for the profile you&#39;re using for this content. You can get this by viewing the Profile list page.</p>\n<p>\t<strong>entry_id/comment_id </strong>(required)<br>\n\tEither an entry_id or a comment_id must be passed to this tag. Be sure to double check that your profile is setup for the content type you&#39;re using here.</p>\n<p>\t<strong>return </strong>(optional)<br>\n\tThe template path/group you want the user to return to after flagging an item. Note that it should NOT have a slash at the front. (eg: blog/my-blog-url-title/comments). If left blank the user is redirected to the home page.</p>\n<p>\t<strong>prefix</strong> (optional)<br>\n\tThe value to use for template tags within the tag pair. By default all variables are prefixed with &quot;fm&quot; but you can change that here.</p>\n<p>\t<strong>Variables</strong></p>\n<p>\tNote! All examples below use &quot;fm&quot; as the variable prefix.</p>\n<p>\t<strong>fm:type</strong><br>\n\tThe profile type</p>\n<p>\t<strong>fm:auto_close_threshold</strong><br>\n\tThe amount of flags required to close an entry/comment.</p>\n<p>\t<strong>fm:profile_name</strong><br>\n\tThe name of the profile being used.</p>\n<p>\t<strong>fm:is_duplicate</strong><br>\n\tReturns &quot;1&quot; if a user has already flagged an item under that profile. Useful for conditionals.</p>\n<p>\t<strong>fm:options</strong><br>\n\tTag Pair to output the flag form fields.</p>\n<p>\t<strong>fm:js_id</strong><br>\n\tUsed in between &quot;fm:options&quot; this will return the ID created for the form field option. Useful for creating JavaScript and field labels.</p>\n<p>\t<strong>fm:radio_button</strong><br>\n\tUsed in between &quot;fm:options&quot; this will return the radio button to output for the option. Note that this is a plain radio button with no title.</p>\n<p>\t<strong>fm:option_title</strong><br>\n\tUsed in between &quot;fm:options&quot; this will return the option&#39;s title.</p>\n<p>\t<strong>fm:description</strong><br>\n\tUsed in between &quot;fm:options&quot; this will return the option&#39;s description.</p>\n<p>\t<strong>fm:user_defined</strong><br>\n\tReturns &quot;1&quot; if an options is set to be user defined. Useful for checking if a textarea is supposed to be output.</p>\n<p>\t<strong>fm:textarea</strong><br>\n\tUsed in between &quot;fm:options&quot; this will return a textarea <em>only</em> if the option is set as User Defined.</p>\n<h4>\n\tExamples</h4>\n<p>\tSee the example directory for an example of this tag.</p>\n"},{"title": "Configuration","id": "configuration","content": "<h4>\n\t<label for=\"flag_master_date_format\">Date Format</label></h4>\n<p>\tThe date format you want Flag Master to use when handling dates. Note that the format should conform to the <a href=\"http://expressionengine.com/user_guide/templates/date_variable_formatting.html#date-formatting-codes\" target=\"_blank\">ExpressionEngine date format</a>.</p>\n<h4>\n\tLicense Number</h4>\n<p>\tYou can get your license number from your Devot:ee member page under Past Purchases. Use that code here.</p>\n"}],"use_sub": true,"logo": "http://mithra62.com/images/m62_docs_logo.png","favicon": "","customcss": "","easing": "easeOutSine","easingduration": "500","bgimage": "","bgrepeat": "repeat","bgattachment": "scroll","bgcolor": "FFFFFF","textcolor": "383838","linkcolor": "0000FF","hrcolor1": "EBEBEB","hrcolor2": "FFFFFF","sidebarbgimage": "","sidebarbgrepeat": "repeat","sidebarbgcolor": "DDDDDD","sidebartextcolor": "222222","sidebarlinkcolor": "444444","sidebaractivecolor": "444444","sidebaractivetextcolor": "DDDDDD","sidebarhrcolor1": "AAAAAA","sidebarhrcolor2": "EEEEEE","cufon": "","itemURL": "","sendJSON": "","sendZIP": "","sendPWD": ""}